apiVersion: kustomize.config.k8s.io/v1beta1
kind: Kustomization
namespace: dex
resources:
  - https://raw.githubusercontent.com/konveyor/minikube_dex_oidc_example/9c280fabc047217376354f45c37b8b9f9e7ab232/dex.yaml
  - ingress.yaml
  - example-app.yaml

patches:
  - target:
      version: v1
      kind: Deployment
      name: dex
    patch: |-
      - op: remove
        path: "/spec/template/spec/containers/0/env"
      - op: replace
        path: "/spec/replicas"
        value: 1
      - op: replace
        path: "/spec/template/spec/containers/0/readinessProbe/httpGet/scheme"
        value: "HTTP"
      - op: remove
        path: "/spec/template/spec/containers/0/volumeMounts/1"
      - op: remove
        path: "/spec/template/spec/volumes/1"
  - target:
      version: v1
      kind: ConfigMap
      name: dex
    patch: |-
      - op: replace
        path: "/data/config.yaml"
        value: |
          issuer: http://dex.dex.svc.cluster.local:5556
          storage:
            type: sqlite3
          web:
            http: 0.0.0.0:5556
          oauth2:
            skipApprovalScreen: false
          
          connectors:
            - type: mockCallback
              id: mock
              name: Example
      
          staticClients:
            - id: kubelogin
              redirectURIs:
                - 'http://localhost:8000'
                - 'http://localhost:18000' # (used if the port 8000 is already in use)
              name: kubelogin
              secret: aes3ahtootieyeish3iep7cohcee2eiKiineroo6vu
            - id: oauth2-proxy
              redirectURIs:
                # These redirect URIs point to the `--redirect-url` for OAuth2 proxy.
                - 'http://oauth2-proxy.local.host/oauth2/callback' # For nginx and traefik example.
              name: 'OAuth2 Proxy'
              secret: ZXhhbXBsZS1hcHAtc2VjcmV0
      
          enablePasswordDB: true
          staticPasswords:
            - email: "admin@example.com"
              # bcrypt hash of the string "password": $(echo password | htpasswd -BinC 10 admin | cut -d: -f2)
              hash: "$2y$10$y6NxF7kB4Bl27WToSR.3WO1RrA6I5z4RCFlK83alHXNo4uA4wpDl2"
              username: "admin"
              userID: "08a8684b-db88-4b73-90a9-3cd1661f5466"
            - email: "user-a@x.x"
              # bcrypt hash of the string "password": $(echo password | htpasswd -BinC 10 admin | cut -d: -f2)
              hash: "$2y$10$y6NxF7kB4Bl27WToSR.3WO1RrA6I5z4RCFlK83alHXNo4uA4wpDl2"
              username: "user-a"
              userID: "08a8684b-db88-4b73-90a9-3cd1661f5460"
            - email: "user-b@x.x"
              # bcrypt hash of the string "password": $(echo password | htpasswd -BinC 10 admin | cut -d: -f2)
              hash: "$2y$10$y6NxF7kB4Bl27WToSR.3WO1RrA6I5z4RCFlK83alHXNo4uA4wpDl2"
              username: "user-b"
              userID: "08a8684b-db88-4b73-90a9-3cd1661f5461"
            - email: "user-c@x.x"
              # bcrypt hash of the string "password": $(echo password | htpasswd -BinC 10 admin | cut -d: -f2)
              hash: "$2y$10$y6NxF7kB4Bl27WToSR.3WO1RrA6I5z4RCFlK83alHXNo4uA4wpDl2"
              username: "user-c"
              userID: "08a8684b-db88-4b73-90a9-3cd1661f5462"
          